# Generated by Django 5.0.12 on 2025-10-02 19:19

import ConfigurationChangeRequest.validator
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='عنوان کمیته')),
                ('is_active', models.BooleanField(default=True, verbose_name='کمیته فعال است؟')),
            ],
            options={
                'verbose_name': 'کمیته',
                'verbose_name_plural': 'کمیته ها',
            },
        ),
        migrations.CreateModel(
            name='Corp',
            fields=[
                ('corp_code', models.CharField(help_text='کد منحصر به فرد شرکت را وارد کنید.', max_length=3, primary_key=True, serialize=False, verbose_name='کد شرکت')),
                ('corp_name', models.CharField(help_text='نام شرکت را وارد کنید.', max_length=100, verbose_name='نام شرکت')),
            ],
            options={
                'verbose_name': 'شرکت',
                'verbose_name_plural': 'شرکت\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotifyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='کد گروه')),
                ('title', models.CharField(max_length=30, verbose_name='عنوان گروه')),
            ],
            options={
                'verbose_name': 'گروه اطلاع رسانی',
                'verbose_name_plural': 'گروه های اطلاع رسانی',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='شناسه سمت')),
                ('role_title', models.CharField(max_length=150, verbose_name='عنوان سمت')),
            ],
            options={
                'verbose_name': 'سمت',
                'verbose_name_plural': 'سمت\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='عنوان فعالیت')),
                ('test_required', models.BooleanField(default=0, help_text='در صورتی که نیاز به تست داشته باشد مقدار یک و در غیر این صورت مقدار صفر خواهد داشت', verbose_name='نیازمند تست است؟')),
                ('order_number', models.PositiveSmallIntegerField(default=1, verbose_name='شماره ترتیب')),
            ],
            options={
                'verbose_name': 'تسک',
                'verbose_name_plural': 'تسک ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_code', models.CharField(help_text='کد منحصر به فرد تیم را وارد کنید.', max_length=3, primary_key=True, serialize=False, verbose_name='کد تیم')),
                ('team_name', models.CharField(help_text='نام تیم را وارد کنید.', max_length=100, verbose_name='نام تیم')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال است')),
            ],
            options={
                'verbose_name': 'تیم',
                'verbose_name_plural': 'تیم\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('national_code', models.CharField(help_text='لطفاً کد ملی خود را وارد کنید.', max_length=10, primary_key=True, serialize=False, validators=[ConfigurationChangeRequest.validator.Validator.NationalCode_Validator], verbose_name='کد ملی')),
                ('first_name', models.CharField(help_text='لطفاً نام خود را وارد کنید.', max_length=100, verbose_name='نام')),
                ('last_name', models.CharField(help_text='لطفاً نام خانوادگی خود را وارد کنید.', max_length=100, verbose_name='نام خانوادگی')),
                ('username', models.CharField(help_text='لطفاً نام کاربری خود را وارد کنید.', max_length=100, verbose_name='نام کاربری')),
                ('gender', models.BooleanField(default=True, help_text='در صورتی که مرد باشد مقدار صحیح و در غیر این صورت مقدار غلط خواهد داشت', verbose_name='جنسیت')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_column='code', help_text='لطفاً کد نوع تغییر را وارد کنید.', max_length=6, null=True, verbose_name='کد نوع تغییر')),
                ('change_type_title', models.CharField(max_length=255, null=True, verbose_name='عنوان نوع تغییر')),
                ('change_title', models.CharField(help_text='لطفاً عنوان تغییر را وارد کنید.', max_length=255, null=True, verbose_name='عنوان تغییر')),
                ('change_description', models.TextField(blank=True, help_text='توضیحات مربوط به تغییر را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تغییر')),
                ('change_location_data_center', models.BooleanField(default=False, help_text='آیا تغییر در مرکز داده انجام می\u200cشود؟', null=True, verbose_name='محل تغییر: مرکز داده')),
                ('change_location_database', models.BooleanField(default=False, help_text='آیا تغییر در پایگاه داده انجام می\u200cشود؟', null=True, verbose_name='محل تغییر: پایگاه داده')),
                ('change_location_system_services', models.BooleanField(default=False, help_text='آیا تغییر در سیستم\u200cها یا سرویس ها انجام می\u200cشود؟', null=True, verbose_name='محل تغییر: سیستم\u200cها و سرویس ها')),
                ('change_location_other', models.BooleanField(default=False, help_text='آیا تغییر در محل دیگری انجام می\u200cشود؟', null=True, verbose_name='محل تغییر: سایر')),
                ('change_location_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به محل تغییر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات محل تغییر')),
                ('need_committee', models.BooleanField(default=False, help_text='آیا نیاز به کمیته وجود دارد؟', null=True, verbose_name='نیاز به کمیته')),
                ('changing_duration', models.PositiveIntegerField(blank=True, help_text='مدت زمان تغییرات بر حسب دقیقه.', null=True, verbose_name='مدت زمان تغییرات')),
                ('downtime_duration', models.PositiveIntegerField(blank=True, help_text='مدت زمان توقف بر حسب دقیقه.', null=True, verbose_name='مدت زمان توقف')),
                ('downtime_duration_worstcase', models.PositiveIntegerField(blank=True, help_text='مدت زمان توقف بر حسب دقیقه.', null=True, verbose_name='بدترین مدت زمان توقف')),
                ('stop_critical_service', models.BooleanField(default=False, help_text='آیا خدمات بحرانی متوقف می\u200cشود؟', null=True, verbose_name='توقف خدمات بحرانی')),
                ('critical_service_title', models.CharField(blank=True, help_text='عنوان خدمات بحرانی را وارد کنید.', max_length=50, null=True, verbose_name='خدمات بحرانی')),
                ('stop_sensitive_service', models.BooleanField(default=False, help_text='آیا خدمات حساس متوقف می\u200cشود؟', null=True, verbose_name='توقف خدمات حساس')),
                ('stop_service_title', models.CharField(blank=True, help_text='عنوان خدمات متوقف شده را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات متوقف شده')),
                ('not_stop_any_service', models.BooleanField(default=False, help_text='آیا هیچ خدماتی متوقف نمی\u200cشود؟', null=True, verbose_name='عدم توقف هیچ خدماتی')),
                ('has_role_back_plan', models.BooleanField(default=False, help_text='آیا برنامه بازگشت وجود دارد؟', null=True, verbose_name='برنامه بازگشت وجود دارد')),
                ('role_back_plan_description', models.CharField(blank=True, help_text='توضیحات مربوط به برنامه بازگشت را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات برنامه بازگشت')),
                ('reason_regulatory', models.BooleanField(default=False, help_text='آیا الزام قانونی وجود دارد؟', null=True, verbose_name='الزام قانونی')),
                ('reason_technical', models.BooleanField(default=False, help_text='آیا الزام فنی وجود دارد؟', null=True, verbose_name='الزام فنی')),
                ('reason_security', models.BooleanField(default=False, help_text='آیا الزام امنیتی وجود دارد؟', null=True, verbose_name='الزام امنیتی')),
                ('reason_business', models.BooleanField(default=False, help_text='آیا الزام کسب و کاری وجود دارد؟', null=True, verbose_name='الزام کسب و کاری')),
                ('reason_other', models.BooleanField(default=False, help_text='آیا الزامات دیگری وجود دارد؟', null=True, verbose_name='سایر الزامات')),
                ('reason_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به الزامات دیگر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات الزامات دیگر')),
                ('committee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.committee', verbose_name='کمیته')),
            ],
            options={
                'verbose_name': 'نوع تغییر',
                'verbose_name_plural': 'انواع تغییرات',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConstValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Caption', models.CharField(max_length=50, verbose_name='عنوان')),
                ('Code', models.CharField(max_length=100, verbose_name='کد')),
                ('IsActive', models.BooleanField(default=True, verbose_name='فعال است؟')),
                ('OrderNumber', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='شماره ترتیب')),
                ('ConstValue', models.IntegerField(blank=True, null=True, verbose_name='مقدار مربوطه')),
                ('Parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='شناسه پدر')),
            ],
            options={
                'verbose_name': 'مقدار ثابت',
                'verbose_name_plural': 'مقادیر ثابت',
                'ordering': ['Parent_id', 'OrderNumber'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('modify_date', models.DateTimeField(auto_now=True, verbose_name='تاریخ آخرین تغییر')),
                ('doc_id', models.IntegerField(help_text='لطفاً کد سند را وارد کنید.', null=True, verbose_name='کد سند')),
                ('status_code', models.CharField(choices=[('DRAFTD', 'پیش نویس'), ('DIRMAN', 'اظهار نظر مدیر مستقیم'), ('RELMAN', 'اظهار نظر مدیر مربوطه'), ('COMITE', 'اظهار نظر کمیته'), ('DOTASK', 'انجام تسک ها'), ('FINISH', 'خاتمه یافته'), ('FAILED', 'خاتمه ناموفقیت آمیز'), ('ERRORF', 'خاتمه با خطا')], default='DRAFTD', help_text='لطفاً کد وضعیت را وارد کنید.', max_length=6, verbose_name='کد وضعیت')),
                ('change_title', models.CharField(help_text='لطفاً عنوان تغییر را وارد کنید.', max_length=255, verbose_name='عنوان تغییر')),
                ('change_description', models.TextField(blank=True, help_text='توضیحات مربوط به تغییر را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تغییر')),
                ('need_committee', models.BooleanField(default=False, help_text='آیا نیاز به کمیته وجود دارد؟', verbose_name='نیاز به کمیته')),
                ('change_location_data_center', models.BooleanField(default=False, help_text='آیا تغییر در مرکز داده انجام می\u200cشود؟', verbose_name='محل تغییر: مرکز داده')),
                ('change_location_database', models.BooleanField(default=False, help_text='آیا تغییر در پایگاه داده انجام می\u200cشود؟', verbose_name='محل تغییر: پایگاه داده')),
                ('change_location_system_services', models.BooleanField(default=False, help_text='آیا تغییر در سیستم\u200cها و سرویس ها انجام می\u200cشود؟', verbose_name='محل تغییر: سیستم\u200cها و سرویس ها')),
                ('change_location_other', models.BooleanField(default=False, help_text='آیا تغییر در محل دیگری انجام می\u200cشود؟', verbose_name='محل تغییر: سایر')),
                ('change_location_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به محل تغییر را وارد کنید.', max_length=500, null=True, validators=[ConfigurationChangeRequest.validator.Validator.validate_change_location_other], verbose_name='توضیحات محل تغییر')),
                ('changing_date', models.CharField(help_text='تاریخ تغییرات به شمسی.', max_length=10, verbose_name='تاریخ تغییرات')),
                ('changing_time', models.CharField(help_text=' ساعت تغییرات به فرمت HH:MM.', max_length=5, verbose_name='ساعت تغییرات')),
                ('changing_date_actual', models.CharField(help_text='تاریخ واقعی تغییرات به شمسی.', max_length=10, null=True, verbose_name='تاریخ و ساعت واقعی تغییرات')),
                ('changing_time_actual', models.CharField(help_text=' ساعت واقعی تغییرات در قالب HH:MM.', max_length=5, null=True, verbose_name='تاریخ و ساعت واقعی تغییرات')),
                ('changing_duration', models.PositiveIntegerField(blank=True, help_text='مدت زمان تغییرات به دقیقه.', null=True, verbose_name='مدت زمان تغییرات')),
                ('changing_duration_actual', models.PositiveIntegerField(blank=True, help_text='مدت زمان واقعی تغییرات به دقیقه.', null=True, verbose_name='مدت زمان واقعی تغییرات')),
                ('downtime_duration', models.PositiveIntegerField(blank=True, help_text='مدت زمان توقف به دقیقه.', null=True, verbose_name='مدت زمان توقف')),
                ('downtime_duration_worstcase', models.PositiveIntegerField(blank=True, help_text='بدترین مدت زمان توقف به دقیقه.', null=True, verbose_name='بدترین مدت زمان توقف')),
                ('downtime_duration_actual', models.PositiveIntegerField(blank=True, help_text='مدت زمان توقف واقعی به دقیقه.', null=True, verbose_name='مدت زمان توقف واقعی')),
                ('stop_critical_service', models.BooleanField(default=False, help_text='آیا خدمات بحرانی متوقف می\u200cشود؟', verbose_name='توقف خدمات بحرانی')),
                ('critical_service_title', models.CharField(blank=True, help_text='عنوان خدمات بحرانی را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات بحرانی')),
                ('stop_sensitive_service', models.BooleanField(default=False, help_text='آیا خدمات حساس متوقف می\u200cشود؟', verbose_name='توقف خدمات حساس')),
                ('stop_service_title', models.CharField(blank=True, help_text='عنوان خدمات متوقف شده را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات متوقف شده')),
                ('not_stop_any_service', models.BooleanField(default=False, help_text='آیا هیچ خدماتی متوقف نمی\u200cشود؟', verbose_name='عدم توقف هیچ خدماتی')),
                ('has_role_back_plan', models.BooleanField(default=False, help_text='آیا برنامه بازگشت وجود دارد؟', verbose_name='برنامه بازگشت وجود دارد')),
                ('role_back_plan_description', models.CharField(blank=True, help_text='توضیحات مربوط به برنامه بازگشت را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات برنامه بازگشت')),
                ('reason_regulatory', models.BooleanField(default=False, help_text='آیا الزام قانونی وجود دارد؟', verbose_name='الزام قانونی')),
                ('reason_technical', models.BooleanField(default=False, help_text='آیا الزام فنی وجود دارد؟', verbose_name='الزام فنی')),
                ('reason_security', models.BooleanField(default=False, help_text='آیا الزام امنیتی وجود دارد؟', verbose_name='الزام امنیتی')),
                ('reason_business', models.BooleanField(default=False, help_text='آیا الزام کسب و کاری وجود دارد؟', verbose_name='الزام کسب و کاری')),
                ('reason_other', models.BooleanField(default=False, help_text='آیا الزامات دیگری وجود دارد؟', verbose_name='سایر الزامات')),
                ('reason_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به الزامات دیگر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات الزامات دیگر')),
                ('change_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('committee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.committee', verbose_name='کمیته')),
                ('change_domain', models.ForeignKey(help_text='دامنه تغییرات می تواند درون سازمانی، برون سازمانی و یا بین سازمانی باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_change_domain', to='ConfigurationChangeRequest.constvalue', verbose_name='دامنه تغییر')),
                ('change_level', models.ForeignKey(help_text='تغییرات می تواند جزئی، بخشی و یا کلان باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_change_level', to='ConfigurationChangeRequest.constvalue', verbose_name='گستردگی تغییرات')),
                ('classification', models.ForeignKey(help_text='طبقه\u200cبندی می تواند عادی یا محرمانه باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_classification', to='ConfigurationChangeRequest.constvalue', verbose_name='طبقه\u200cبندی')),
                ('priority', models.ForeignKey(help_text='اولویت می تواند استاندارد، فوری و اضطراری باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_priority', to='ConfigurationChangeRequest.constvalue', verbose_name='اولویت')),
                ('risk_level', models.ForeignKey(help_text='سطح ریسک می تواند بالا، متوسط و پایین باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_risk_level', to='ConfigurationChangeRequest.constvalue', verbose_name='سطح ریسک')),
                ('requestor_role_id', models.ForeignKey(db_column='requestor_role_id', on_delete=django.db.models.deletion.CASCADE, related_name='requestor_role_id', to='ConfigurationChangeRequest.role', verbose_name='سمت درخواست کننده')),
                ('requestor_team_code', models.ForeignKey(db_column='requestor_team_code', on_delete=django.db.models.deletion.CASCADE, related_name='requestor_team_code', to='ConfigurationChangeRequest.team', verbose_name='تیم درخواست کننده')),
                ('committee_user_nationalcode', models.ForeignKey(blank=True, db_column='committee_user_nationalcode', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='committee_user_nationalcode', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر کمیته')),
                ('creator_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to='ConfigurationChangeRequest.user', verbose_name='کاربر ایجادکننده')),
                ('direct_manager_nationalcode', models.ForeignKey(db_column='direct_manager_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='direct_manager_nationalcode', to='ConfigurationChangeRequest.user', verbose_name='کد ملی مدیر')),
                ('last_modifier_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)ss', to='ConfigurationChangeRequest.user', verbose_name='آخرین کاربر ویرایشگر')),
                ('related_manager_nationalcode', models.ForeignKey(db_column='related_manager_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='related_manager_nationalcode', to='ConfigurationChangeRequest.user', verbose_name='کد ملی مدیر مربوطه')),
                ('requestor_nationalcode', models.ForeignKey(db_column='requestor_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='requestor_nationalcode', to='ConfigurationChangeRequest.user', verbose_name='کد ملی درخواست کننده')),
            ],
            options={
                'verbose_name': 'درخواست تغییر',
                'verbose_name_plural': 'درخواست\u200cهای تغییر',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changetype',
            name='change_domain',
            field=models.ForeignKey(help_text='دامنه تغییرات می تواند درون سازمانی، برون سازمانی و یا بین سازمانی باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='change_domain', to='ConfigurationChangeRequest.constvalue', verbose_name='دامنه تغییر'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='change_level',
            field=models.ForeignKey(help_text='تغییرات می تواند جزئی، بخشی و یا کلان باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='change_level', to='ConfigurationChangeRequest.constvalue', verbose_name='گستردگی تغییرات'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='classification',
            field=models.ForeignKey(help_text='طبقه\u200cبندی می تواند عادی یا محرمانه باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classification', to='ConfigurationChangeRequest.constvalue', verbose_name='طبقه\u200cبندی'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='priority',
            field=models.ForeignKey(help_text='اولویت می تواند استاندارد، فوری و اضطراری باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='priority', to='ConfigurationChangeRequest.constvalue', verbose_name='اولویت'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='risk_level',
            field=models.ForeignKey(help_text='سطح ریسک می تواند بالا، متوسط و پایین باشد.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risk_level', to='ConfigurationChangeRequest.constvalue', verbose_name='سطح ریسک'),
        ),
        migrations.CreateModel(
            name='RequestCorp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corp_code', models.ForeignKey(db_column='corp_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.corp', verbose_name='شرکت')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='درخواست')),
            ],
            options={
                'verbose_name': 'شرکت در درخواست',
                'verbose_name_plural': 'شرکت\u200cها در درخواست\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestCorp_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('corp_code', models.ForeignKey(db_column='corp_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.corp', verbose_name='شرکت')),
            ],
            options={
                'verbose_name': 'شرکت در نوع درخواست',
                'verbose_name_plural': 'شرکت\u200cها در نوع  درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestExtraInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='شناسه اطلاعات تکمیلی')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='شناسه درخواست')),
            ],
            options={
                'verbose_name': 'اطلاعات تکمیلی درخواست',
                'verbose_name_plural': 'اطلاعات تکمیلی درخواست\u200cها',
            },
        ),
        migrations.CreateModel(
            name='RequestExtraInformation_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='شناسه نوع درخواست')),
                ('extra_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='شناسه اطلاعات تکمیلی')),
            ],
            options={
                'verbose_name': 'اطلاعات تکمیلی درخواست',
                'verbose_name_plural': 'اطلاعات تکمیلی درخواست\u200cها',
            },
        ),
        migrations.CreateModel(
            name='RequestNotifyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by_email', models.BooleanField(default=True, verbose_name='اطلاع رسانی از طریق ایمیل')),
                ('by_sms', models.BooleanField(default=False, verbose_name='اطلاع رسانی از طریق پیامک')),
                ('by_phone', models.BooleanField(default=False, verbose_name='اطلاع رسانی از طریق تلفن گویا')),
                ('notify_group', models.ForeignKey(db_column='notify_group_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.notifygroup', verbose_name='شناسه گروه اطلاع رسانی')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='شناسه درخواست')),
            ],
            options={
                'verbose_name': 'گروه اطلاع رسانی درخواست',
                'verbose_name_plural': 'گروه های اطلاع رسانی درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestNotifyGroup_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by_email', models.BooleanField(default=True, verbose_name='اطلاع رسانی از طریق ایمیل')),
                ('by_sms', models.BooleanField(default=False, verbose_name='اطلاع رسانی از طریق پیامک')),
                ('by_phone', models.BooleanField(default=False, verbose_name='اطلاع رسانی از طریق تلفن گویا')),
                ('changetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('notify_group', models.ForeignKey(db_column='notify_group_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.notifygroup', verbose_name='شناسه گروه اطلاع رسانی')),
            ],
            options={
                'verbose_name': 'گروه اطلاع رسانی درخواست نوع درخواست',
                'verbose_name_plural': 'گروه های اطلاع رسانی درخواست ها نوع درخواست',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField(default=0, help_text='ترتیب اجرای تسک در درخواست را مشخص می کند', verbose_name='شماره ترتیب')),
                ('status_code', models.CharField(choices=[('DEFINE', 'تعریف'), ('EXERED', 'آماده انتخاب مجری'), ('EXESEL', 'مجری انتخاب شده'), ('TESRED', 'آماده انتخاب تستر'), ('TESSEL', 'تستر انتخاب شده'), ('FINISH', 'انجام موفق'), ('FAILED', 'انجام ناموفق')], max_length=6, verbose_name='وضعیت تسک')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='شناسه درخواست')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.task', verbose_name='شناسه تسک')),
            ],
            options={
                'verbose_name': 'تسک درخواست',
                'verbose_name_plural': 'تسک های درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTaskUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_role_code', models.CharField(max_length=1, verbose_name='سمت کاربر در تسک')),
                ('request_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.requesttask', verbose_name='شناسه تسک درخواست')),
                ('user_role_id', models.ForeignKey(db_column='user_role_id', help_text='لطفاً سمت فرد کاربر را وارد کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.role', verbose_name='سمت کاربر')),
                ('user_team_code', models.ForeignKey(blank=True, db_column='user_team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
                ('user_nationalcode', models.ForeignKey(db_column='user_nationalcode', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.user', verbose_name='کاربر مربوطه')),
            ],
            options={
                'verbose_name': 'کاربر تسک درخواست',
                'verbose_name_plural': 'کاربران تسک های درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTaskUserSelected',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_date', models.DateTimeField(auto_now_add=True, help_text='تاریخ و ساعتی که این تسک توسط کاربر انتخاب شده است', verbose_name='تاریخ و ساعت انتخاب تسک')),
                ('user_report_result', models.BooleanField(help_text='در صورتی که تست موفقیت آمیز باشد مقدار 1 و در غیر این صورت مقدار صفر خواهد داشت', null=True)),
                ('user_report_date', models.CharField(help_text='تاریخ گزارش تستر به شمسی.', max_length=10, null=True, verbose_name='تاریخ گزارش تستر')),
                ('user_report_time', models.CharField(help_text='ساعت گزارش تستر به شمسی در قالب HH:MM.', max_length=5, null=True, verbose_name='ساعت گزارش تستر')),
                ('user_done_date', models.CharField(help_text='تاریخ انجام تست به شمسی.', max_length=10, null=True, verbose_name='تاریخ انجام تست')),
                ('user_done_time', models.CharField(help_text='ساعت انجام تست به شمسی در قالب HH:MM.', max_length=5, null=True, verbose_name='ساعت انجام تست')),
                ('user_report_description', models.CharField(blank=True, help_text='توضیحات تست را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تست')),
                ('request_task_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.requesttaskuser', verbose_name='شناسه کاربر تسک')),
            ],
            options={
                'verbose_name': 'کاربر انجام دهنده تسک',
                'verbose_name_plural': 'کاربران انجام دهنده تسک ها',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='notifygroup',
            name='role_id',
            field=models.ForeignKey(help_text='در صورتی این گروه مربوط به یک سمت خاص است', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notify_role_id', to='ConfigurationChangeRequest.role', verbose_name='شناسه سمت'),
        ),
        migrations.CreateModel(
            name='RequestTask_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.PositiveSmallIntegerField(default=0, help_text='ترتیب اجرای تسک در نوع درخواست را مشخص می کند', verbose_name='شماره ترتیب')),
                ('changetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.task', verbose_name='شناسه تسک')),
            ],
            options={
                'verbose_name': 'تسک نوع درخواست',
                'verbose_name_plural': 'تسک های نوع درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTeam_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('team_code', models.ForeignKey(db_column='team_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.team', verbose_name='تیم')),
            ],
            options={
                'verbose_name': 'تیم بر اساس نوع درخواست',
                'verbose_name_plural': 'تیم\u200cها بر اساس نوع درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='درخواست')),
                ('team_code', models.ForeignKey(db_column='team_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.team', verbose_name='تیم')),
            ],
            options={
                'verbose_name': 'تیم در درخواست',
                'verbose_name_plural': 'تیم\u200cها در درخواست\u200cها',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='notifygroup',
            name='team_code',
            field=models.ForeignKey(help_text='در صورتی این گروه مربوط به یک تیم است', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notify_team_code', to='ConfigurationChangeRequest.team', verbose_name='کد سمت'),
        ),
        migrations.CreateModel(
            name='TaskUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_role_code', models.CharField(choices=[('E', 'مجری'), ('T', 'تستر')], max_length=1, verbose_name='سمت کاربر در تسک')),
                ('is_active', models.BooleanField(default=True, help_text='مشخص می کند که این کاربر برای این تسک فعال است یا خیر؟', verbose_name='فعال است؟')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.task', verbose_name='شناسه تسک')),
                ('user_role_id', models.ForeignKey(db_column='user_role_id', help_text='لطفاً سمت فرد کاربر را وارد کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_role_id', to='ConfigurationChangeRequest.role', verbose_name='سمت کاربر')),
                ('user_team_code', models.ForeignKey(blank=True, db_column='user_team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
                ('user_nationalcode', models.ForeignKey(db_column='user_nationalcode', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.user', verbose_name='کاربر مربوطه')),
            ],
            options={
                'verbose_name': 'کاربر تسک',
                'verbose_name_plural': 'کاربران تسک ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_date', models.DateTimeField(auto_now_add=True, verbose_name='زمان دریافت')),
                ('send_date', models.DateTimeField(null=True, verbose_name='زمان دریافت')),
                ('fields_value', models.JSONField(help_text='مقادیر فیلدهای فرم در زمان خروج از کارتابل، به صورت json ذخیره می شود', null=True, verbose_name='مقادیر فیلدها')),
                ('user_send_date', models.CharField(help_text='تاریخ اظهار نظر کاربر به شمسی.', max_length=10, null=True, verbose_name='تاریخ اعلام نظر کاربر')),
                ('user_send_time', models.CharField(help_text=' ساعت اظهار نظر کاربر در قالب HH:MM.', max_length=5, null=True, verbose_name='ساعت اعلام نظر کاربر')),
                ('user_reject_description', models.CharField(blank=True, help_text='توضیحات مربوط به رد کاربر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات رد کاربر')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='شناسه درخواست')),
                ('user_opinion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_opinion', to='ConfigurationChangeRequest.constvalue', verbose_name='نظر کاربر')),
                ('user_role_code', models.ForeignKey(db_column='user_role_code', help_text='کد سمت کاربر', on_delete=django.db.models.deletion.CASCADE, related_name='user_role_code', to='ConfigurationChangeRequest.constvalue', verbose_name='کد سمت کاربر')),
                ('user_role_id', models.ForeignKey(db_column='user_role_id', help_text='لطفاً سمت فرد کاربر را وارد کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.role', verbose_name='سمت کاربر')),
                ('user_team_code', models.ForeignKey(blank=True, db_column='user_team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
                ('user_nationalcode', models.ForeignKey(db_column='user_nationalcode', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.user', verbose_name='کاربر مربوطه')),
            ],
            options={
                'verbose_name': 'گردش درخواست',
                'verbose_name_plural': 'گردش درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotifyGroupUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.notifygroup', verbose_name='کد گروه اطلاع رسانی')),
                ('user_role_id', models.ForeignKey(db_column='user_role_id', help_text='لطفاً سمت فرد کاربر را وارد کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.role', verbose_name='سمت کاربر')),
                ('user_team_code', models.ForeignKey(blank=True, db_column='user_team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
                ('user_nationalcode', models.ForeignKey(db_column='user_nationalcode', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.user', verbose_name='کاربر مربوطه')),
            ],
            options={
                'verbose_name': 'افراد اطلاع رسانی',
                'verbose_name_plural': 'افراد اطلاع رسانی',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('modify_date', models.DateTimeField(auto_now=True, verbose_name='تاریخ آخرین تغییر')),
                ('request_status', models.CharField(max_length=100, verbose_name='وضعیت فعلی درخواست')),
                ('task_status', models.CharField(max_length=100, verbose_name='وضعیت فعلی تسک')),
                ('template_code', models.CharField(max_length=20, verbose_name='کد الگوی اطلاع رسانی')),
                ('email_to', models.CharField(max_length=1000, null=True, verbose_name='آدرس ایمیل دریافت کنندگان To')),
                ('email_cc', models.CharField(max_length=1000, null=True, verbose_name='آدرس ایمیل دریافت کنندگان To')),
                ('email_bcc', models.CharField(max_length=1000, null=True, verbose_name='آدرس ایمیل دریافت کنندگان To')),
                ('variables', models.CharField(max_length=2000, null=True, verbose_name='متغییرها و مقادیر')),
                ('service_data', models.CharField(max_length=4000, null=True, verbose_name='مقادیر بازگشتی تابع')),
                ('service_return_val', models.SmallIntegerField(null=True, verbose_name='کد بازگشتی تابع')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='درخواست مربوطه')),
                ('creator_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to='ConfigurationChangeRequest.user', verbose_name='کاربر ایجادکننده')),
                ('last_modifier_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_%(class)ss', to='ConfigurationChangeRequest.user', verbose_name='آخرین کاربر ویرایشگر')),
            ],
            options={
                'verbose_name': 'سابقه اطلاع رسانی',
                'verbose_name_plural': 'سوابق اطلاع رسانی ها',
            },
        ),
        migrations.AddField(
            model_name='committee',
            name='administrator_nationalCode',
            field=models.ForeignKey(db_column='administrator_nationalcode', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrator', to='ConfigurationChangeRequest.user', verbose_name='کد ملی دبیر کمیته'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='related_manager',
            field=models.ForeignKey(help_text='مدیر مربوطه را انتخاب کنید', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.user', verbose_name='مدیر مربوطه'),
        ),
        migrations.CreateModel(
            name='UserTeamRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_national_code', models.ForeignKey(db_column='manager_national_code', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direct_manager', to='ConfigurationChangeRequest.user', verbose_name='کد ملی مدیر مستقیم')),
                ('national_code', models.ForeignKey(db_column='national_code', on_delete=django.db.models.deletion.CASCADE, related_name='user', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر')),
                ('role_id', models.ForeignKey(db_column='role_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.role', verbose_name='شناسه سمت')),
                ('team_code', models.ForeignKey(blank=True, db_column='team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
            ],
            options={
                'verbose_name': 'سمت کاربر',
                'verbose_name_plural': 'سمت های کاربران',
            },
        ),
    ]
