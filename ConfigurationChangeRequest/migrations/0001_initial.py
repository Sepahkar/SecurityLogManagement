# Generated by Django 5.0.12 on 2025-02-13 10:34

import ConfigurationChangeRequest.validator
import django.db.models.deletion
import jdatetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeType',
            fields=[
                ('code', models.CharField(db_column='code', help_text='لطفاً کد نوع تغییر را وارد کنید.', max_length=6, primary_key=True, serialize=False, verbose_name='کد نوع تغییر')),
                ('change_title', models.CharField(help_text='لطفاً عنوان تغییر را وارد کنید.', max_length=255, verbose_name='عنوان تغییر')),
                ('change_description', models.TextField(blank=True, help_text='توضیحات مربوط به تغییر را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تغییر')),
                ('change_location_data_center', models.BooleanField(default=False, help_text='آیا تغییر در مرکز داده انجام می\u200cشود؟', verbose_name='محل تغییر: مرکز داده')),
                ('change_location_database', models.BooleanField(default=False, help_text='آیا تغییر در پایگاه داده انجام می\u200cشود؟', verbose_name='محل تغییر: پایگاه داده')),
                ('change_location_systems', models.BooleanField(default=False, help_text='آیا تغییر در سیستم\u200cها انجام می\u200cشود؟', verbose_name='محل تغییر: سیستم\u200cها')),
                ('change_location_other', models.BooleanField(default=False, help_text='آیا تغییر در محل دیگری انجام می\u200cشود؟', verbose_name='محل تغییر: سایر')),
                ('change_location_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به محل تغییر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات محل تغییر')),
                ('scope', models.CharField(choices=[('IN', 'درون سازمانی'), ('BOATH', 'بین سازمانی'), ('OUT', 'برون سازمانی')], help_text='لطفاً دامنه تغییر را انتخاب کنید.', max_length=6, verbose_name='دامنه تغییر')),
                ('changing_duration', models.DurationField(blank=True, help_text='مدت زمان تغییرات به ساعت و دقیقه.', null=True, verbose_name='مدت زمان تغییرات')),
                ('downtime_duration', models.DurationField(blank=True, help_text='مدت زمان توقف به ساعت و دقیقه.', null=True, verbose_name='مدت زمان توقف')),
                ('stop_critical_service', models.BooleanField(default=False, help_text='آیا خدمات بحرانی متوقف می\u200cشود؟', verbose_name='توقف خدمات بحرانی')),
                ('critical_service_title', models.CharField(blank=True, help_text='عنوان خدمات بحرانی را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات بحرانی')),
                ('stop_sensitive_service', models.BooleanField(default=False, help_text='آیا خدمات حساس متوقف می\u200cشود؟', verbose_name='توقف خدمات حساس')),
                ('stop_service_title', models.CharField(blank=True, help_text='عنوان خدمات متوقف شده را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات متوقف شده')),
                ('not_stop_any_service', models.BooleanField(default=False, help_text='آیا هیچ خدماتی متوقف نمی\u200cشود؟', verbose_name='عدم توقف هیچ خدماتی')),
                ('has_role_back_plan', models.BooleanField(default=False, help_text='آیا برنامه بازگشت وجود دارد؟', verbose_name='برنامه بازگشت وجود دارد')),
                ('role_back_plan_description', models.CharField(blank=True, help_text='توضیحات مربوط به برنامه بازگشت را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات برنامه بازگشت')),
                ('reason_regulatory', models.BooleanField(default=False, help_text='آیا الزام قانونی وجود دارد؟', verbose_name='الزام قانونی')),
                ('reason_technical', models.BooleanField(default=False, help_text='آیا الزام فنی وجود دارد؟', verbose_name='الزام فنی')),
                ('reason_security', models.BooleanField(default=False, help_text='آیا الزام امنیتی وجود دارد؟', verbose_name='الزام امنیتی')),
                ('reason_business', models.BooleanField(default=False, help_text='آیا الزام کسب و کاری وجود دارد؟', verbose_name='الزام کسب و کاری')),
                ('reason_other', models.BooleanField(default=False, help_text='آیا الزامات دیگری وجود دارد؟', verbose_name='سایر الزامات')),
                ('reason_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به الزامات دیگر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات الزامات دیگر')),
                ('need_committee', models.BooleanField(default=False, help_text='آیا نیاز به کمیته وجود دارد؟', verbose_name='نیاز به کمیته')),
                ('test_required', models.BooleanField(default=0, help_text='در صورتی که نیاز به تست داشته باشد مقدار یک و در غیر این صورت مقدار صفر خواهد داشت', verbose_name='نیازمند تست است؟')),
            ],
            options={
                'verbose_name': 'نوع تغییر',
                'verbose_name_plural': 'انواع تغییرات',
                'db_table': 'change_type_table',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Corp',
            fields=[
                ('corp_code', models.CharField(help_text='کد منحصر به فرد شرکت را وارد کنید.', max_length=100, primary_key=True, serialize=False, verbose_name='کد شرکت')),
                ('corp_name', models.CharField(help_text='نام شرکت را وارد کنید.', max_length=100, verbose_name='نام شرکت')),
            ],
            options={
                'verbose_name': 'شرکت',
                'verbose_name_plural': 'شرکت\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_code', models.CharField(help_text='کد منحصر به فرد تیم را وارد کنید.', max_length=100, primary_key=True, serialize=False, verbose_name='کد تیم')),
                ('team_name', models.CharField(help_text='نام تیم را وارد کنید.', max_length=100, verbose_name='نام تیم')),
            ],
            options={
                'verbose_name': 'تیم',
                'verbose_name_plural': 'تیم\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConstValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Caption', models.CharField(max_length=50, verbose_name='عنوان')),
                ('Code', models.CharField(max_length=100, verbose_name='کد')),
                ('IsActive', models.BooleanField(default=True, verbose_name='فعال است؟')),
                ('OrderNumber', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='شماره ترتیب')),
                ('ConstValue', models.IntegerField(blank=True, null=True, verbose_name='مقدار مربوطه')),
                ('Parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='شناسه پدر')),
            ],
            options={
                'verbose_name': 'مقدار ثابت',
                'verbose_name_plural': 'مقادیر ثابت',
                'ordering': ['Parent_id', 'OrderNumber'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationChangeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestor_role_title', models.CharField(help_text='لطفاً سمت فرد درخواست\u200cدهنده را وارد کنید.', max_length=100, verbose_name='سمت درخواست\u200cدهنده')),
                ('change_title', models.CharField(help_text='لطفاً عنوان تغییر را وارد کنید.', max_length=255, verbose_name='عنوان تغییر')),
                ('change_description', models.TextField(blank=True, help_text='توضیحات مربوط به تغییر را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تغییر')),
                ('change_location_data_center', models.BooleanField(default=False, help_text='آیا تغییر در مرکز داده انجام می\u200cشود؟', verbose_name='محل تغییر: مرکز داده')),
                ('change_location_database', models.BooleanField(default=False, help_text='آیا تغییر در پایگاه داده انجام می\u200cشود؟', verbose_name='محل تغییر: پایگاه داده')),
                ('change_location_systems', models.BooleanField(default=False, help_text='آیا تغییر در سیستم\u200cها انجام می\u200cشود؟', verbose_name='محل تغییر: سیستم\u200cها')),
                ('change_location_other', models.BooleanField(default=False, help_text='آیا تغییر در محل دیگری انجام می\u200cشود؟', verbose_name='محل تغییر: سایر')),
                ('change_location_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به محل تغییر را وارد کنید.', max_length=500, null=True, validators=[ConfigurationChangeRequest.validator.Validator.validate_change_location_other], verbose_name='توضیحات محل تغییر')),
                ('scope', models.CharField(choices=[('IN', 'درون سازمانی'), ('BOATH', 'بین سازمانی'), ('OUT', 'برون سازمانی')], help_text='لطفاً دامنه تغییر را انتخاب کنید.', max_length=6, verbose_name='دامنه تغییر')),
                ('changing_date', models.DateTimeField(default=jdatetime.datetime.now, help_text='تاریخ و ساعت تغییرات به شمسی.', verbose_name='تاریخ تغییرات')),
                ('changing_date_actual', models.DateTimeField(default=jdatetime.datetime.now, help_text='تاریخ و ساعت واقعی تغییرات به شمسی.', verbose_name='تاریخ و ساعت واقعی تغییرات')),
                ('changing_duration', models.DurationField(blank=True, help_text='مدت زمان تغییرات به ساعت و دقیقه.', null=True, verbose_name='مدت زمان تغییرات')),
                ('changing_duration_actual', models.DurationField(blank=True, help_text='مدت زمان واقعی تغییرات به ساعت و دقیقه.', null=True, verbose_name='مدت زمان واقعی تغییرات')),
                ('downtime_duration', models.DurationField(blank=True, help_text='مدت زمان توقف به ساعت و دقیقه.', null=True, verbose_name='مدت زمان توقف')),
                ('downtime_duration_actual', models.DurationField(blank=True, help_text='مدت زمان توقف واقعی به ساعت و دقیقه.', null=True, verbose_name='مدت زمان توقف واقعی')),
                ('stop_critical_service', models.BooleanField(default=False, help_text='آیا خدمات بحرانی متوقف می\u200cشود؟', verbose_name='توقف خدمات بحرانی')),
                ('critical_service_title', models.CharField(blank=True, help_text='عنوان خدمات بحرانی را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات بحرانی')),
                ('stop_sensitive_service', models.BooleanField(default=False, help_text='آیا خدمات حساس متوقف می\u200cشود؟', verbose_name='توقف خدمات حساس')),
                ('stop_service_title', models.CharField(blank=True, help_text='عنوان خدمات متوقف شده را وارد کنید.', max_length=200, null=True, verbose_name='عنوان خدمات متوقف شده')),
                ('not_stop_any_service', models.BooleanField(default=False, help_text='آیا هیچ خدماتی متوقف نمی\u200cشود؟', verbose_name='عدم توقف هیچ خدماتی')),
                ('has_role_back_plan', models.BooleanField(default=False, help_text='آیا برنامه بازگشت وجود دارد؟', verbose_name='برنامه بازگشت وجود دارد')),
                ('role_back_plan_description', models.CharField(blank=True, help_text='توضیحات مربوط به برنامه بازگشت را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات برنامه بازگشت')),
                ('reason_regulatory', models.BooleanField(default=False, help_text='آیا الزام قانونی وجود دارد؟', verbose_name='الزام قانونی')),
                ('reason_technical', models.BooleanField(default=False, help_text='آیا الزام فنی وجود دارد؟', verbose_name='الزام فنی')),
                ('reason_security', models.BooleanField(default=False, help_text='آیا الزام امنیتی وجود دارد؟', verbose_name='الزام امنیتی')),
                ('reason_business', models.BooleanField(default=False, help_text='آیا الزام کسب و کاری وجود دارد؟', verbose_name='الزام کسب و کاری')),
                ('reason_other', models.BooleanField(default=False, help_text='آیا الزامات دیگری وجود دارد؟', verbose_name='سایر الزامات')),
                ('reason_other_description', models.CharField(blank=True, help_text='توضیحات مربوط به الزامات دیگر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات الزامات دیگر')),
                ('manager_opinion', models.BooleanField(help_text='در صورت موافقت مدیر مقدار 1 و در غیر این صورت مقدار صفر دارد', null=True)),
                ('manager_opinion_date', models.DateTimeField(help_text='تاریخ و ساعت اظهار نظر مدیر به شمسی.', null=True)),
                ('manager_reject_description', models.CharField(blank=True, help_text='توضیحات مربوط به رد مدیر را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات رد مدیر')),
                ('need_committee', models.BooleanField(default=False, help_text='آیا نیاز به کمیته وجود دارد؟', verbose_name='نیاز به کمیته')),
                ('committee_opinion_date', models.DateTimeField(help_text='تاریخ و ساعت اظهار نظر کمیته به شمسی.', null=True)),
                ('committee_opinion', models.BooleanField(help_text='در صورتی که نظر کمیته مثبت است مقدار 1 و در غیر این صورت مقدار صفر خواهد داشت', null=True)),
                ('committee_reject_description', models.CharField(blank=True, help_text='توضیحات مربوط به رد کمیته را وارد کنید.', max_length=500, null=True, verbose_name='توضیحات رد کمیته')),
                ('executor_report_date', models.DateTimeField(help_text='تاریخ و ساعت گزارش مجری به شمسی.', null=True)),
                ('executor_report', models.BooleanField(help_text='در صورتی که اجرا موفقیت آمیز باشد مقدار 1 و در غیر این صورت مقدار صفر خواهد داشت', null=True)),
                ('execution_description', models.CharField(blank=True, help_text='گزارش انجام را وارد کنید.', max_length=1000, null=True, verbose_name='گزارش انجام')),
                ('test_required', models.BooleanField(default=0, help_text='در صورتی که نیاز به تست داشته باشد مقدار یک و در غیر این صورت مقدار صفر خواهد داشت', verbose_name='نیازمند تست است؟')),
                ('tester_report', models.BooleanField(help_text='در صورتی که تست موفقیت آمیز باشد مقدار 1 و در غیر این صورت مقدار صفر خواهد داشت', null=True)),
                ('test_date', models.DateTimeField(help_text='تاریخ و ساعت انجام تست به شمسی.', null=True, verbose_name='تاریخ انجام تست')),
                ('tester_report_date', models.DateTimeField(help_text='تاریخ و ساعت گزارش تست به شمسی.', null=True, verbose_name='تاریخ گزارش تست')),
                ('test_report_description', models.CharField(blank=True, help_text='توضیحات تست را وارد کنید.', max_length=1000, null=True, verbose_name='توضیحات تست')),
                ('doc_id', models.IntegerField(help_text='لطفاً کد سند را وارد کنید.', null=True, verbose_name='کد سند')),
                ('state_code', models.CharField(default='DRAFTR', help_text='لطفاً کد وضعیت را وارد کنید.', max_length=6, verbose_name='کد وضعیت')),
                ('change_type_code', models.ForeignKey(db_column='change_type_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('classification', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='طبقه\u200cبندی')),
                ('requestor_team_code', models.ForeignKey(blank=True, db_column='requestor_team_code', help_text='تیم مربوط به درخواست\u200cدهنده را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم درخواست\u200cدهنده')),
            ],
            options={
                'verbose_name': 'درخواست تغییر',
                'verbose_name_plural': 'درخواست\u200cهای تغییر',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changetype',
            name='classification',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.constvalue', verbose_name='طبقه\u200cبندی'),
        ),
        migrations.CreateModel(
            name='RequestCorp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corp_code', models.ForeignKey(db_column='corp_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.corp', verbose_name='شرکت')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='درخواست')),
            ],
            options={
                'verbose_name': 'شرکت در درخواست',
                'verbose_name_plural': 'شرکت\u200cها در درخواست\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestCorp_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetype_code', models.ForeignKey(db_column='changetype_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('corp_code', models.ForeignKey(db_column='corp_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.corp', verbose_name='شرکت')),
            ],
            options={
                'verbose_name': 'شرکت در نوع درخواست',
                'verbose_name_plural': 'شرکت\u200cها در نوع  درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTeam_ChangeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changetype_code', models.ForeignKey(db_column='changetype_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.changetype', verbose_name='کد نوع تغییر')),
                ('team_code', models.ForeignKey(db_column='team_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.team', verbose_name='تیم')),
            ],
            options={
                'verbose_name': 'تیم بر اساس نوع درخواست',
                'verbose_name_plural': 'تیم\u200cها بر اساس نوع درخواست ها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RequestTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.configurationchangerequest', verbose_name='درخواست')),
                ('team_code', models.ForeignKey(db_column='team_code', on_delete=django.db.models.deletion.CASCADE, to='ConfigurationChangeRequest.team', verbose_name='تیم')),
            ],
            options={
                'verbose_name': 'تیم در درخواست',
                'verbose_name_plural': 'تیم\u200cها در درخواست\u200cها',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('national_code', models.CharField(help_text='لطفاً کد ملی خود را وارد کنید.', max_length=10, primary_key=True, serialize=False, validators=[ConfigurationChangeRequest.validator.Validator.NationalCode_Validator], verbose_name='کد ملی')),
                ('first_name', models.CharField(help_text='لطفاً نام خود را وارد کنید.', max_length=100, verbose_name='نام')),
                ('last_name', models.CharField(help_text='لطفاً نام خانوادگی خود را وارد کنید.', max_length=100, verbose_name='نام خانوادگی')),
                ('role_title', models.CharField(help_text='لطفاً سمت خود را وارد کنید.', max_length=100, verbose_name='سمت کاربر')),
                ('username', models.CharField(help_text='لطفاً نام کاربری خود را وارد کنید.', max_length=100, verbose_name='نام کاربری')),
                ('team_code', models.ForeignKey(blank=True, db_column='team_code', help_text='تیم مربوط به کاربر را انتخاب کنید.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfigurationChangeRequest.team', verbose_name='تیم کاربر')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='configurationchangerequest',
            name='committee_user_nationalcode',
            field=models.ForeignKey(blank=True, db_column='committee_user_nationalcode', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='committee', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر کمیته'),
        ),
        migrations.AddField(
            model_name='configurationchangerequest',
            name='executor_nationalcode',
            field=models.ForeignKey(db_column='executor_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='executor', to='ConfigurationChangeRequest.user', verbose_name='کد ملی مجری'),
        ),
        migrations.AddField(
            model_name='configurationchangerequest',
            name='manager_nationalcode',
            field=models.ForeignKey(db_column='manager_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='manager', to='ConfigurationChangeRequest.user', verbose_name='کد ملی مدیر'),
        ),
        migrations.AddField(
            model_name='configurationchangerequest',
            name='requestor_nationalcode',
            field=models.ForeignKey(db_column='requestor_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='requestor', to='ConfigurationChangeRequest.user', verbose_name='درخواست کننده'),
        ),
        migrations.AddField(
            model_name='configurationchangerequest',
            name='tester_nationalcode',
            field=models.ForeignKey(db_column='tester_nationalcode', on_delete=django.db.models.deletion.CASCADE, related_name='tester', to='ConfigurationChangeRequest.user', verbose_name='کد ملی تستر'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='committee_user_nationalcode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='committee_users', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر کمیته'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='executor_nationalcode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executors', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر مجری'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='manager_nationalcode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managers', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر مدیر'),
        ),
        migrations.AddField(
            model_name='changetype',
            name='tester_nationalcode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='testers', to='ConfigurationChangeRequest.user', verbose_name='کد ملی کاربر تست کننده'),
        ),
    ]
