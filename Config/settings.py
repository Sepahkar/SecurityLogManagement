"""
Django settings for Config project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os

import environ
from dotenv import load_dotenv

print("\n[~~~~~~~~ Additional Information ~~~~~~~~]\n")
# RUN_IN_PRODUCTION env variable will set in web.config that resides in
# project's root directory
RUN_IN_PRODUCTION = os.getenv("PRODUCTION", False) == "True"


# ایجاد یک شیء environ
env = environ.Env()
# بارگذاری متغیرها از فایل .env (اگر وجود داشته باشد)
environ.Env.read_env(env_file='.env', default='.env')

# استفاده از متغیر (با مقدار پیش‌فرض)
APPCODE = env('APPCODE', default='SECURITY_LOG')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*uel5ub@1-smn^=s!oer6*#t#v$yw5!gg^p_0!b8#i7smri$ae'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = ['localhost', '192.168.20.81', '192.168.50.15','192.168.27.90','192.168.70.25','192.168.70.104', '127.0.0.1']

CURRENT_APP_Port="15000"
STATIC_ROOT = BASE_DIR / "staticfiles"
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'auth2',
    'ConfigurationChangeRequest',
    "whitenoise"

]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.RemoteUserAuthentication",
    ],
}


# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
#     # "auth2.middleware.CustomRemoteUserMiddleware",
#     "auth2.middleware.CustomRemoteUserMiddlewareDEVMODE",
#     "auth2.middleware.CustomRemoteUserMiddlewarePortalDelegation",
#     "django_middleware_global_request.middleware.GlobalRequestMiddleware",

# ]


AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.RemoteUserBackend']
AUTH_USER_MODEL = "auth2.User"
#DEV_USER = "v.bagheri"

ROOT_URLCONF = 'Config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "mssql",  # 'mssql',sql_server.pyodbc
#         "NAME": "SecurityLogManagement",
#         "USER": "sa",
#         "PASSWORD": "Master123",
#         "HOST": "EIT-DJANGO-DB\\DJANGODB",
#         #"HOST": "EIT-CALSQL\CALSQL",


#         "PORT": "",
#         "OPTIONS": {
#             "driver": "ODBC Driver 17 for SQL Server",  # 'SQL Server Native Client 11.0'
#         },
#     },
# }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True

# تنظیمات اضافی برای timezone
USE_L10N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
SESSION_COOKIE_NAME = os.getcwd().split("\\")[-1] + "_sessionid"
STATIC_URL = "/static/"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

if RUN_IN_PRODUCTION:
    load_dotenv(".env.production")
    ENVIRONMENT_MODE = "PRODUCTION"
    DEBUG = False
    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "whitenoise.middleware.WhiteNoiseMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "auth2.middleware.CustomRemoteUserMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]
    STATIC_ROOT = BASE_DIR / "staticfiles"

    print("environment: ", ENVIRONMENT_MODE)


else:
    load_dotenv(".env.dev")
    ENVIRONMENT_MODE = "DEV"
    DEBUG = True
    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "auth2.middleware.CustomRemoteUserMiddlewareDEVMODE",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]
    DEV_USER = os.getenv("DEV_USER")
    STATICFILES_DIRS = [BASE_DIR / "static"]

    print("environment: ", ENVIRONMENT_MODE)
    print("request.user: ", DEV_USER)

SECRET_KEY = os.getenv("SECRET_KEY")
JWT_SECRET = SECRET_KEY
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS").split(",")
DATABASES = {
    "default": {
        "ENGINE": "mssql",
        "NAME": os.getenv("DATABASE_DEFAULT_NAME"),
        "USER": os.getenv("DATABASE_DEFAULT_USER"),
        "PASSWORD": os.getenv("DATABASE_DEFAULT_PASSWORD"),
        "HOST": os.getenv("DATABASE_DEFAULT_HOST"),
        "PORT": os.getenv("DATABASE_DEFAULT_PORT"),
        "OPTIONS": {
            "driver": "ODBC Driver 17 for SQL Server",
        },
    },
}

print("\n[~~~~~~~~ xxxxxxxxxxxxxxxxxxxxxx ~~~~~~~~]\n")
